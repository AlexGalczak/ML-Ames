temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
temp$Gender = as.factor(temp$Gender)
summary(temp)
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
temp$Gender = as.factor(temp$Gender)
summary(temp)
library(tidyverse)
temp %>% ggplot() + geom_histogram(aes(Body.Temp))
temp %>% ggplot() + geom_density(aes(Body.Temp, col=Gender))
temp %>% ggplot() + geom_boxplot(aes(Gender, Body.Temp, ))
temp %>% ggplot() + geom_histogram(aes(Heart.Rate))
temp %>% ggplot() + geom_density(aes(Heart.Rate, col=Gender))
temp %>% ggplot() + geom_boxplot(aes(Gender, Heart.Rate, ))
temp %>% ggplot() + geom_bar(aes(Gender))
temp %>% ggplot() + geom_point(aes(Body.Temp, Heart.Rate, col=Gender))
temp %>% ggplot() + geom_histogram(aes(Body.Temp))
temp %>% ggplot() + geom_density(aes(Body.Temp, col=Gender))
temp %>% ggplot() + geom_boxplot(aes(Gender, Body.Temp, ))
temp %>% ggplot() + geom_histogram(aes(Heart.Rate))
temp %>% ggplot() + geom_density(aes(Heart.Rate, col=Gender))
temp %>% ggplot() + geom_boxplot(aes(Gender, Heart.Rate, ))
temp %>% ggplot() + geom_bar(aes(Gender))
temp %>% ggplot() + geom_point(aes(Body.Temp, Heart.Rate, col=Gender))
t.test(temp$Body.Temp, mu=98.6)
PlantGrowth %>% ggplot() + geom_boxplot(aes(group, weight))
PlantGrowth %>% group_by(group) %>% summarise(sd(weight))
bartlett.test(weight ~ group, data=PlantGrowth)
summary(aov(weight ~ group, data=PlantGrowth))
knitr::opts_chunk$set(echo = TRUE)
ggsave('plas_dest_plot.png', width = 5, height = 5)
library(oceanmap)
library(ncmeta)
library(tidync)
library(tidync)
library(ggplot2)
library(mapdata)
library(dplyr)
library(tidyr)
library(tidyverse)
library(raster)
library(readr)
library(readxl)
library(maps)
library(usmap)
library(RColorBrewer)
library(ragg)
knitr::opts_chunk$set(echo = TRUE, fig.width = 10, fig.height = 15)
recycled <- read_excel("./data/epa_trash.xlsx", sheet = 'Materials recycled')
combusted <- read_excel("./data/epa_trash.xlsx", sheet = 'Material combusted')
landfilled <- read_excel("./data/epa_trash.xlsx", sheet = 'Materials landfilled')
generated <- read_excel("./data/epa_trash.xlsx", sheet = 'Materials generated')
generated_all  <- generated %>%
slice(1,2,6,7,12) %>%
pivot_longer(cols = c(2:16), names_to = 'Year', values_to = 'Weight_tons') %>%
mutate(Weight_ktons = Weight_tons/1000)%>%
mutate(Materials = case_when(
Materials == "Products - Paper and Paperboard" ~ "Paper",
Materials == "Products - Metals - Total" ~ "Metals",
Materials == "Products - Plastics" ~"Plastics",
Materials == "Products - Glass" ~ "Glass",
Materials == "Products - Total Materials" ~"Total",
T ~ Materials
))
generated_plas_tot = generated %>%
slice(7,12) %>%
pivot_longer(cols = c(2:16), names_to = 'Year', values_to = 'Weight_tons') %>%
mutate(Weight_ktons = Weight_tons/1000)
test = ggplot(data=generated_all, aes(x=Year, y= Weight_tons)) + geom_col(aes(fill = Materials), position = 'dodge') + scale_fill_brewer(palette="Dark2") + ylab('Weight (tons)') + ggtitle('Trash production in the United States 1960-2018') +
theme_void() + theme(plot.title = element_text(size = 12))
test
trash_gen_plot <- ggplot(data=generated_all, aes(x=Year, y= Weight_ktons)) + geom_col(aes(fill = Materials), position = position_dodge()) + scale_fill_brewer(palette="Dark2") + ylab('Weight (k-tons)') + ggtitle('Trash generation in the United States 1960-2018') +
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 0.1, colour = "black"),
legend.justification = c(0, 1),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.border = element_rect(color = 'black'),
panel.grid.major = element_line(colour = "grey70", size = 0.1),
panel.grid.minor = element_blank()
)
ggsave('trash_gen_plot.pdf')
ggsave('trash_gen_plot.png', width = 12, height = 5)
?theme
?position_dodge
trash_gen_plot
plas_total_plot = ggplot(data=generated_plas_tot, aes(x=Year, y= Weight_ktons)) +
geom_col(aes(fill = Materials), position = 'dodge') +
scale_fill_brewer(palette="Dark2") + ylab('Weight (k-tons)') +
ggtitle('Trash generation in the United States 1960-2018', subtitle = 'Total vs. Plastic')+
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 0.1, colour = "black"),
legend.justification = c(0, 1),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.border = element_rect(color = 'black'),
panel.grid.major = element_line(colour = "grey70", size = 0.1),
panel.grid.minor = element_blank()
)
plas_total_plot
ggsave('plas_total_plot.png', width = 12, height = 5)
generated_tot = generated %>%
slice(1,2,6,7,11,12,16) %>%
pivot_longer(cols = c(2:16), names_to = 'Year', values_to = 'Weight_tons') %>%
mutate(Weight_ktons = Weight_tons/1000)%>%
mutate(Year = as.numeric(Year)) %>%
filter(Materials == 'Products - Total Materials')
generated_plastic = generated %>%
slice(1,2,6,7,11,12,16) %>%
pivot_longer(cols = c(2:16), names_to = 'Year', values_to = 'Weight_tons') %>%
mutate(Weight_ktons = Weight_tons/1000)%>%
mutate(Year = as.numeric(Year)) %>%
filter(Materials == 'Products - Plastics')
plas_total_areaplot <- ggplot(data=generated_tot, aes(x=Year, y= Weight_ktons)) +
geom_area(data=generated_tot, color = "#BF87B3", fill="#BF87B3", alpha=0.4, outline.type = "upper", size= 1, show.legend = TRUE) +
#geom_line(color="#BF87B3", size=2) +
#geom_point(size=3, color="#BF87B3") +
geom_area(data=generated_plastic, color = "#3F2D91", fill="#3F2D91", alpha=0.4, outline.type = "upper", size= 1 ) +
ylab('Weight (k-tons)') +
ggtitle('Trash generation in the United States 1960-2018', subtitle = 'Total vs. Plastic') +
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 0.1, colour = "black"),
legend.justification = c(0, 1),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.border = element_rect(color = 'black'),
panel.grid.major = element_line(colour = "grey70", size = 0.1),
panel.grid.minor = element_blank()
)
plas_total_plot
ggsave('plas_total_plot.png', width = 12, height = 5)
?ggtitle
?geom_area
plas_total_areaplot
ggsave('plas_total_areaplot.png', width = 5, height = 5)
#generated_plastic
recycled_plastic = recycled %>%
slice(1,2,6,7,11,12,16) %>%
pivot_longer(cols = c(2:16), names_to = 'Year', values_to = 'Weight_tons') %>%
mutate(Weight_ktons = Weight_tons/1000)%>%
mutate(Year = as.numeric(Year)) %>%
filter(Materials == 'Products - Plastics')
landfilled_plastic = landfilled %>%
slice(1,2,6,7,11,12,16) %>%
pivot_longer(cols = c(2:16), names_to = 'Year', values_to = 'Weight_tons') %>%
mutate(Weight_ktons = Weight_tons/1000)%>%
mutate(Year = as.numeric(Year)) %>%
filter(Materials == 'Products - Plastics')
combusted_plastic = combusted %>%
slice(1,2,6,7,11,12,16) %>%
pivot_longer(cols = c(2:16), names_to = 'Year', values_to = 'Weight_tons') %>%
mutate(Weight_ktons = Weight_tons/1000)%>%
mutate(Year = as.numeric(Year)) %>%
filter(Materials == 'Products - Plastics')
plas_dest_plot <- ggplot(data=generated_plastic, aes(x=Year, y= Weight_ktons)) +
geom_area(data=generated_plastic, color = "#FFB5C5", fill="#FFB5C5", alpha=0.4, outline.type = "upper", size= 1) +
geom_area(data= landfilled_plastic,  color = "#BF87B3", fill="#BF87B3", alpha=0.4, outline.type = "upper", size= 1) +
geom_area(data=recycled_plastic,color = "#7F5AA2", fill="#7F5AA2", alpha=0.6, outline.type = "upper", size= 1)+
ylab('Weight (k-tons)') +
ggtitle('Plastic Trash Destination in the United States 1960-2018', subtitle = 'Generated Waste vs. Landfill vs. Recycling') +
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 0.1, colour = "black"),
legend.justification = c(0, 1),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.border = element_rect(color = 'black'),
panel.grid.major = element_line(colour = "grey70", size = 0.1),
panel.grid.minor = element_blank()
)
plas_dest_plot
ggsave('plas_dest_plot.png', width = 5, height = 5)
plas_total_areaplot <- ggplot(data=generated_tot, aes(x=Year, y= Weight_ktons)) +
geom_area(data=generated_tot, color = "#BF87B3", fill="#BF87B3", alpha=0.4, outline.type = "upper", size= 1, show.legend = TRUE) +
#geom_line(color="#BF87B3", size=2) +
#geom_point(size=3, color="#BF87B3") +
geom_area(data=generated_plastic, color = "#3F2D91", fill="#3F2D91", alpha=0.4, outline.type = "upper", size= 1 ) +
ylab('Weight (k-tons)') +
ggtitle('Trash generation in the US 1960-2018', subtitle = 'Total vs. Plastic') +
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 0.1, colour = "black"),
legend.justification = c(0, 1),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.border = element_rect(color = 'black'),
panel.grid.major = element_line(colour = "grey70", size = 0.1),
panel.grid.minor = element_blank()
)
plas_total_areaplot
ggsave('plas_total_areaplot.png', width = 5, height = 5)
?ggtitle
?geom_area
plas_dest_plot <- ggplot(data=generated_plastic, aes(x=Year, y= Weight_ktons)) +
geom_area(data=generated_plastic, color = "#FFB5C5", fill="#FFB5C5", alpha=0.4, outline.type = "upper", size= 1) +
geom_area(data= landfilled_plastic,  color = "#BF87B3", fill="#BF87B3", alpha=0.4, outline.type = "upper", size= 1) +
geom_area(data=recycled_plastic,color = "#7F5AA2", fill="#7F5AA2", alpha=0.6, outline.type = "upper", size= 1)+
ylab('Weight (k-tons)') +
ggtitle('Plastic Trash Destination in the US 1960-2018', subtitle = 'Generated Waste vs. Landfill vs. Recycling') +
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 0.1, colour = "black"),
legend.justification = c(0, 1),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.border = element_rect(color = 'black'),
panel.grid.major = element_line(colour = "grey70", size = 0.1),
panel.grid.minor = element_blank()
)
plas_dest_plot
ggsave('plas_dest_plot.png', width = 5, height = 5)
shiny::runApp('C:/Users/Owner/Desktop/Data/BOOTCAMP/Python/ML/ML-Ames/shiny-dash - AG')
runApp('C:/Users/Owner/Desktop/Data/BOOTCAMP/Python/ML/ML-Ames/shiny-dash - AG')
library(shiny)
library(shinydashboard)
library(tidyverse)
library(osmdata)
library(sf)
library(ggmap)
library(ggrepel)
library(ggiraph)
library(shinyWidgets)
library(fontawesome)
library(shinydashboardPlus)
?shinydashboardPlus
library(ggridges)
library(viridis)
library(hrbrthemes)
library(ggExtra)
library(RColorBrewer)
options(scipen=10000)
load("ames_mapdata.RData")
df <- as.data.frame(read.csv("Ames_HousePrice_df.csv"))
nbhd <- as.data.frame(read.csv("Ames_HousePrice_nbhd.csv"))
neighborhoods <- as.data.frame(read.csv("neighborhoods.csv"))
house_price <- data.frame(read.csv('Ames_HousePrice_cleaned_new.csv'))
clean_dummy <- read.csv('cleaned_dummies.csv')
setwd("C:/Users/Owner/Desktop/Data/BOOTCAMP/Python/ML/ML-Ames/shiny-dash - AG")
library(shiny)
library(shinydashboard)
library(tidyverse)
library(osmdata)
library(sf)
library(ggmap)
library(ggrepel)
library(ggiraph)
library(shinyWidgets)
library(fontawesome)
library(shinydashboardPlus)
?shinydashboardPlus
library(ggridges)
library(viridis)
library(hrbrthemes)
library(ggExtra)
library(RColorBrewer)
options(scipen=10000)
load("ames_mapdata.RData")
df <- as.data.frame(read.csv("Ames_HousePrice_df.csv"))
nbhd <- as.data.frame(read.csv("Ames_HousePrice_nbhd.csv"))
neighborhoods <- as.data.frame(read.csv("neighborhoods.csv"))
house_price <- data.frame(read.csv('Ames_HousePrice_cleaned_new.csv'))
clean_dummy <- read.csv('cleaned_dummies.csv')
runApp()
